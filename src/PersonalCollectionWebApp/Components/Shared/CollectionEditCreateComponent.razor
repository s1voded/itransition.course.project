@using PSC.Blazor.Components.MarkdownEditor
@using PSC.Blazor.Components.MarkdownEditor.EventsArgs

<MudGrid>
    <MudItem xs="12" sm="7">
        <MudPaper Class="pa-4">
            <MudForm @bind-IsValid="@formIsValid">
                <MudTextField @bind-Value="Collection.Name" Label="Name" Required="true" RequiredError="Name is required!" />
                <MudSelect @bind-Value="Collection.ThemeId" Label="Theme" AnchorOrigin="Origin.BottomCenter" >
                    @foreach (var theme in Themes)
                    {
                        <MudSelectItem T="int?" Value="@theme.Id">@theme.Name</MudSelectItem>
                    }
                </MudSelect>
                <MudDivider DividerType="DividerType.Middle" Class="my-2" />
                <MarkdownEditor @bind-Value="Collection.Description" MaxHeight="150px" />
                <MudExpansionPanels MultiExpansion="true">
                    <MudExpansionPanel Text="String fields">
                        @for (int i = 0; i < CustomFieldsCount; i++)
                        {
                            var index = i;
                            <MudGrid Spacing="2">
                                <MudItem xs="1">
                                    <MudCheckBox @bind-Value="CustomFieldsSettings.CustomStrings[index].Enable"></MudCheckBox>
                                </MudItem>
                                <MudItem xs="11">
                                    <MudTextField @bind-Value="CustomFieldsSettings.CustomStrings[index].Name" Label="Custom string field name" Required="CustomFieldsSettings.CustomStrings[index].Enable" Disabled="!CustomFieldsSettings.CustomStrings[index].Enable"></MudTextField>
                                </MudItem>
                            </MudGrid>
                        }
                    </MudExpansionPanel>
                    <MudExpansionPanel Text="Text fields">
                        @for (int i = 0; i < CustomFieldsCount; i++)
                        {
                            var index = i;
                            <MudGrid Spacing="2">
                                <MudItem xs="1">
                                    <MudCheckBox @bind-Value="CustomFieldsSettings.CustomTexts[index].Enable"></MudCheckBox>
                                </MudItem>
                                <MudItem xs="11">
                                    <MudTextField @bind-Value="CustomFieldsSettings.CustomTexts[index].Name" Label="Custom text field name" Required="CustomFieldsSettings.CustomTexts[index].Enable" Disabled="!CustomFieldsSettings.CustomTexts[index].Enable"></MudTextField>
                                </MudItem>
                            </MudGrid>
                        }
                    </MudExpansionPanel>
                    <MudExpansionPanel Text="Int fields">
                        @for (int i = 0; i < CustomFieldsCount; i++)
                        {
                            var index = i;
                            <MudGrid Spacing="2">
                                <MudItem xs="1">
                                    <MudCheckBox @bind-Value="CustomFieldsSettings.CustomInts[index].Enable"></MudCheckBox>
                                </MudItem>
                                <MudItem xs="11">
                                    <MudTextField @bind-Value="CustomFieldsSettings.CustomInts[index].Name" Label="Custom int field name" Required="CustomFieldsSettings.CustomInts[index].Enable" Disabled="!CustomFieldsSettings.CustomInts[index].Enable"></MudTextField>
                                </MudItem>
                            </MudGrid>
                        }
                    </MudExpansionPanel>
                    <MudExpansionPanel Text="Bool fields">
                        @for (int i = 0; i < CustomFieldsCount; i++)
                        {
                            var index = i;
                            <MudGrid Spacing="2">
                                <MudItem xs="1">
                                    <MudCheckBox @bind-Value="CustomFieldsSettings.CustomBools[index].Enable"></MudCheckBox>
                                </MudItem>
                                <MudItem xs="11">
                                    <MudTextField @bind-Value="CustomFieldsSettings.CustomBools[index].Name" Label="Custom bool field name" Required="CustomFieldsSettings.CustomBools[index].Enable" Disabled="!CustomFieldsSettings.CustomBools[index].Enable"></MudTextField>
                                </MudItem>
                            </MudGrid>
                        }
                    </MudExpansionPanel>
                    <MudExpansionPanel Text="Date fields">
                        @for (int i = 0; i < CustomFieldsCount; i++)
                        {
                            var index = i;
                            <MudGrid Spacing="2">
                                <MudItem xs="1">
                                    <MudCheckBox @bind-Value="CustomFieldsSettings.CustomDates[index].Enable"></MudCheckBox>
                                </MudItem>
                                <MudItem xs="11">
                                    <MudTextField @bind-Value="CustomFieldsSettings.CustomDates[index].Name" Label="Custom date field name" Required="CustomFieldsSettings.CustomDates[index].Enable" Disabled="!CustomFieldsSettings.CustomDates[index].Enable"></MudTextField>
                                </MudItem>
                            </MudGrid>
                        }
                    </MudExpansionPanel>
                </MudExpansionPanels>
                <MudDivider DividerType="DividerType.Middle" Class="my-2" />
                <div class="d-flex align-center justify-space-between">
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" Disabled="@(!formIsValid)" Class="ml-auto" OnClick="Submit">@SubmitButtonText</MudButton>
                </div>
            </MudForm>
        </MudPaper>
    </MudItem>
</MudGrid>

@code {
    [Parameter] public Collection Collection { get; set; }
    [Parameter] public IEnumerable<Theme> Themes { get; set; }
    [Parameter] public CustomFieldsSettings CustomFieldsSettings { get; set; }
    [Parameter] public EventCallback OnSubmit { get; set; }
    [Parameter] public string SubmitButtonText { get; set; }

    private bool formIsValid;
    bool expandedCustomFiledsSettings = false;

    async Task Submit()
    {
        await OnSubmit.InvokeAsync();
    }
}
