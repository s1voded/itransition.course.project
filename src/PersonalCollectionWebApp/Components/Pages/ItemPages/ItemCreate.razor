@page "/collections/{CollectionId:int}/itemcreate"
@using PersonalCollectionWebApp.Components.Shared
@attribute [Authorize(Policy = Constants.PolicyUserNotBlocked)]
@rendermode InteractiveServer
@inject NavigationManager NavigationManager
@inject CollectionService CollectionService
@inject IAuthorizationService AuthorizationService

<PageTitle>Item create</PageTitle>

@if (canManageItem)
{
    <ItemEditCreateComponent Item="item"
                             Tags="tags"
                             CustomFieldsSettings="collection?.CustomFieldsSettings"
                             OnSubmit="AddItem"
                             SubmitButtonText="Create">
    </ItemEditCreateComponent>
}
else
{
    <MudText Align="Align.Center">Not authorized.</MudText>
}


@code {
    [Parameter]
    public int CollectionId { get; set; }

    [CascadingParameter]
    private Task<AuthenticationState>? authenticationState { get; set; }

    public Item item = new();
    private PersonalCollection? collection;
    private IEnumerable<Tag> tags;
    private bool canManageItem;

    protected override async Task OnInitializedAsync()
    {
        tags = await CollectionService.GetAllItemTags();
        collection = await CollectionService.GetCollectionById(CollectionId);

        if (authenticationState is not null)
        {
            var authState = await authenticationState;
            var user = authState?.User;

            if (user is not null)
            {
                var isAuthorized = await AuthorizationService.AuthorizeAsync(user, collection, Constants.PolicyCanManageCollection);
                canManageItem = isAuthorized.Succeeded;
            }
        }
    }

    public async Task AddItem()
    {
        if (authenticationState is not null)
        {
            var authState = await authenticationState;
            var user = authState?.User;

            if (user is not null)
            {
                var isAuthorized = await AuthorizationService.AuthorizeAsync(user, collection, Constants.PolicyCanManageCollection);
                if (isAuthorized.Succeeded)
                {
                    item.CollectionId = CollectionId;
                    item.CreatedDate = DateTime.UtcNow;
                    await CollectionService.AddItem(item);
                    NavigationManager.NavigateTo($"/collections/{CollectionId}");
                }
                else
                {
                    NavigationManager.NavigateTo("/");
                }
            }
        }
    }
}
