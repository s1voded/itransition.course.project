@attribute [Route(AppRouteCollections)]
@attribute [Authorize(Policy = PolicyUserNotBlocked)]
@rendermode @(new InteractiveServerRenderMode(false))
@inject CollectionService CollectionService
@inject NavigationManager NavigationManager
@inject AuthService AuthService
@inject IStringLocalizer<Collections> locale

<PageTitle>@locale["Collections"]</PageTitle>

<MudButtonGroup Color="Color.Default" Size="Size.Small" Variant="Variant.Outlined">
    <MudButton StartIcon="@Icons.Material.Filled.Add" OnClick="NavigateToAddCollection">@locale["Add collection"]</MudButton>
</MudButtonGroup>

<MudDivider DividerType="DividerType.Middle" Class="my-2" />

<MudTable T="CollectionDto" Items="@collections" Hover=" true" OnRowClick="@NavigateToCollectionDetails" RowClass="cursor-pointer">
    <ColGroup>
        <col style="width: 4%;" />
        <col style="width: 24%;" />
        <col style="width: 24%;" />
        <col style="width: 24%;" />
        <col style="width: 24%;" />
    </ColGroup>
    <HeaderContent>
        <MudTh></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<CollectionDto, object>(x=>x.Name)">@locale["Name"]</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<CollectionDto, object>(x=>x.Theme)">@locale["Theme"]</MudTableSortLabel></MudTh>
        <MudTh>@locale["Description"]</MudTh>
        <MudTh>@locale["Items count"]</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd>
            @if (!string.IsNullOrEmpty(context.Image))
            {
                <ImageComponent FileName="@context.Image" ImgHieght="50" ImgWidth="100" />
            }
        </MudTd>
        <MudTd DataLabel="Name">@context.Name</MudTd>
        <MudTd DataLabel="Theme">@context.Theme</MudTd>
        <MudTd DataLabel="Description">@((MarkupString)@Markdig.Markdown.ToHtml(context?.Description ?? string.Empty))</MudTd>
        <MudTd DataLabel="Items count">@context.ItemsCount</MudTd>
    </RowTemplate>
</MudTable>

@code {
    private IEnumerable<CollectionDto> collections = [];

    protected override async Task OnInitializedAsync()
    {
        if(await AuthService.IsUserAuthenticated())
        {
            var userId = await AuthService.GetCurrentUserId();
            if (!string.IsNullOrEmpty(userId))
            {
                collections = await CollectionService.GetUserCollections(userId);
            }
        }        
    }

    private void NavigateToCollectionDetails(TableRowClickEventArgs<CollectionDto> args)
    {
        NavigationManager.NavigateTo($"/{NavCollections}/{args.Item.Id}");
    }

    private void NavigateToAddCollection()
    {
        NavigationManager.NavigateTo($"/{NavCollections}/{NavCreate}");
    }
}
