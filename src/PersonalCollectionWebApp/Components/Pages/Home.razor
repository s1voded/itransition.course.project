@page "/"
@attribute [Authorize(Policy = Constants.PolicyUserNotBlockedOrAnonymous)]
@rendermode InteractiveServer
@inject CollectionService CollectionService
@inject NavigationManager NavigationManager

<PageTitle>Home</PageTitle>

<MudTable T="Item" Items="@lastAddedItems" Hover="true" Dense="true" OnRowClick="@ItemDetails" RowClass="cursor-pointer">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Last added items</MudText>
    </ToolBarContent>
    <ColGroup>
        <col style="width: 25%;" />
        <col style="width: 25%;" />
        <col style="width: 25%;" />
        <col style="width: 25%;" />
    </ColGroup>
    <HeaderContent>
        <MudTh>Name</MudTh>
        <MudTh>Collection</MudTh>
        <MudTh>Author</MudTh>
        <MudTh>Added</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Name">@context.Name</MudTd>
        <MudTd DataLabel="Collection">@context.Collection.Name</MudTd>
        <MudTd DataLabel="Author">@context.Collection.User.UserName</MudTd>
        <MudTd DataLabel="Added" >@context.CreatedDate.ToLocalTime()</MudTd>
    </RowTemplate>
</MudTable>

<MudDivider DividerType="DividerType.Middle" Class="my-2" />

<MudTable T="Collection" Items="@largestCollections" Hover="true" Dense="true" OnRowClick="@CollectionDetails" RowClass="cursor-pointer">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Largest collections</MudText>
    </ToolBarContent>
    <ColGroup>
        <col style="width: 25%;" />
        <col style="width: 25%;" />
        <col style="width: 25%;" />
        <col style="width: 25%;" />
    </ColGroup>
    <HeaderContent>
        <MudTh>Name</MudTh>
        <MudTh>Theme</MudTh>
        <MudTh>Author</MudTh>
        <MudTh>Items count</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Name">@context.Name</MudTd>
        <MudTd DataLabel="Theme">@context.Theme?.Name</MudTd>
        <MudTd DataLabel="Author">@context.User.UserName</MudTd>
        <MudTd DataLabel="Items count">@context.Items.Count</MudTd>
    </RowTemplate>
</MudTable>

<MudAppBar Color="Color.Transparent" Fixed="false" Dense="true">
    <MudSpacer />
    <MudAutocomplete T="string" Label="Search" Dense="true" Margin=Margin.Dense Variant="Variant.Outlined" SearchFunc="@SearchItem" @bind-Value="selectedItem" />
</MudAppBar>

@code {
    private IEnumerable<Item> lastAddedItems = [];
    private IEnumerable<Collection> largestCollections = [];
    private int countLargestCollections = 5;
    private int countLastAddedItems = 5;

    protected override async Task OnInitializedAsync()
    {
        lastAddedItems = await CollectionService.GetLastAddedItems(countLastAddedItems);
        largestCollections = await CollectionService.GetLargestCollections(countLargestCollections);
    }

    private void CollectionDetails(TableRowClickEventArgs<Collection> collection)
    {
        NavigationManager.NavigateTo($"/{Constants.NavCollections}/{collection.Item.Id}");
    }

    private void ItemDetails(TableRowClickEventArgs<Item> args)
    {
        NavigationManager.NavigateTo($"/{Constants.NavItems}/{args.Item.Id}");
    }

    private string selectedItem;
    private async Task<IEnumerable<string>> SearchItem(string value)
    {
        if (string.IsNullOrEmpty(value))
            return new string[0];

        var items = await CollectionService.SearchItems(value);
        return items.Select(i => i.Name);        
    }
}