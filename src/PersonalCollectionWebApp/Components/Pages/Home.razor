@page "/"
@attribute [Authorize(Policy = PolicyUserNotBlockedOrAnonymous)]
@rendermode InteractiveServer
@inject CollectionService CollectionService
@inject NavigationManager NavigationManager
@inject IStringLocalizer<Home> locale

<PageTitle>Home</PageTitle>

<MudTable T="Item" Items="@lastAddedItems" Hover="true" Dense="true" OnRowClick="@NavigateToItemDetails" RowClass="cursor-pointer">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Last added items</MudText>
    </ToolBarContent>
    <ColGroup>
        <col style="width: 25%;" />
        <col style="width: 25%;" />
        <col style="width: 25%;" />
        <col style="width: 25%;" />
    </ColGroup>
    <HeaderContent>
        <MudTh>Name</MudTh>
        <MudTh>Collection</MudTh>
        <MudTh>Author</MudTh>
        <MudTh>Added</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Name">@context.Name</MudTd>
        <MudTd DataLabel="Collection">@context.Collection.Name</MudTd>
        <MudTd DataLabel="Author">@context.Collection.User.UserName</MudTd>
        <MudTd DataLabel="Added" >@context.CreatedDate.ToLocalTime()</MudTd>
    </RowTemplate>
</MudTable>

<MudDivider DividerType="DividerType.Middle" Class="my-2" />

<MudTable T="Collection" Items="@largestCollections" Hover="true" Dense="true" OnRowClick="@NavigateToCollectionDetails" RowClass="cursor-pointer">
    <ToolBarContent>
        <MudText Typo="Typo.h6">@locale["Largest"]</MudText>
    </ToolBarContent>
    <ColGroup>
        <col style="width: 25%;" />
        <col style="width: 25%;" />
        <col style="width: 25%;" />
        <col style="width: 25%;" />
    </ColGroup>
    <HeaderContent>
        <MudTh>Name</MudTh>
        <MudTh>Theme</MudTh>
        <MudTh>Author</MudTh>
        <MudTh>Items count</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Name">@context.Name</MudTd>
        <MudTd DataLabel="Theme">@context.Theme?.Name</MudTd>
        <MudTd DataLabel="Author">@context.User.UserName</MudTd>
        <MudTd DataLabel="Items count">@context.Items.Count</MudTd>
    </RowTemplate>
</MudTable>

<MudDivider DividerType="DividerType.Middle" Class="my-2" />

<MudPaper Class="pa-4" Elevation="1">
    <MudText Typo="Typo.h6" Class="pa-2">Tags</MudText>
    @foreach (var tag in tagsWithUsedCount)
    {
        <MudLink Href="@GetHref(tag.Name)" Style=@GetFontSizeForTag(tag) Class="pa-2">@tag.Name</MudLink>
    }
</MudPaper>


@code {
    private IEnumerable<Item> lastAddedItems = [];
    private IEnumerable<Collection> largestCollections = [];
    private IEnumerable<TagDto> tagsWithUsedCount = [];
    private int countLargestCollections = 5;
    private int countLastAddedItems = 5;

    protected override async Task OnInitializedAsync()
    {
        lastAddedItems = await CollectionService.GetLastAddedItems(countLastAddedItems);
        largestCollections = await CollectionService.GetLargestCollections(countLargestCollections);
        tagsWithUsedCount = await CollectionService.GetTagsWithUsedCount();
    }

    private void NavigateToCollectionDetails(TableRowClickEventArgs<Collection> collection)
    {
        NavigationManager.NavigateTo($"/{NavCollections}/{collection.Item.Id}");
    }

    private void NavigateToItemDetails(TableRowClickEventArgs<Item> args)
    {
        NavigationManager.NavigateTo($"/{NavItems}/{args.Item.Id}");
    }

    private string GetHref(string tagName)
    {
        return $"/{NavSearch}?{ParameterSearchTag}={tagName}";
    }

    private string GetFontSizeForTag(TagDto tag)
    {
        var minFontSize = 12;
        var maxFontSize = 30;
        var minCount = tagsWithUsedCount.Min(t => t.Count);
        var maxCount = tagsWithUsedCount.Max(t => t.Count);

        var fontSize = Scale(tag.Count, minCount, maxCount, minFontSize, maxFontSize);
        return $"font-size: {fontSize}px;";
    }

    private int Scale(int value, int min, int max, int minScale, int maxScale)
    {
        var scaled = minScale + (double)(value - min) / (max - min) * (maxScale - minScale);
        return Convert.ToInt32(scaled);
    }
}