@page "/ManageUsers"
@rendermode InteractiveServer
@inject UserManagerService UserManagerService

@attribute [Authorize(Roles ="Admin")]

<PageTitle>Manage users</PageTitle>

@* <MudDataGrid T="ApplicationUser" MultiSelection="true" Items="@Users" @bind-SelectedItems="selectedUsers"
             SelectOnRowClick="true" QuickFilter="@UserFilter">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Users</MudText>
        <MudSpacer />
        <MudTextField @bind-Value="_searchString" Placeholder="Search" Adornment="Adornment.Start" Immediate="true"
                      AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Small" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <Columns>
        <SelectColumn T="ApplicationUser" />
        <PropertyColumn Property="x => x.Id" Sortable="false" Filterable="false" />
        <PropertyColumn Property="x => x.UserName" />
        <PropertyColumn Property="x => x.Email" />
        <PropertyColumn Property="x => IsAdmin(x)" Title="Admin"/>
        <PropertyColumn Property="x => x.IsBlocked" Title="Block"/>
    </Columns>
    <PagerContent>
        <MudDataGridPager T="ApplicationUser" />
    </PagerContent>
</MudDataGrid> *@

<MudTable Items="@users" MultiSelection="true" @bind-SelectedItems="selectedUsers" Filter="UserFilter" Hover=" true" Breakpoint="Breakpoint.Sm" LoadingProgressColor="Color.Info">
    <ToolBarContent>
        <MudText Typo="Typo.h4">Users</MudText>
        <MudSpacer />
        <MudTextField Immediate="true" @bind-Value="searchString" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>Id</MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<ApplicationUserDto, object>(x=>x.UserName)">Username</MudTableSortLabel></MudTh>
        <MudTh>Email</MudTh>
        <MudTh>Role</MudTh>
        <MudTh>Block</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Id">@context.Id</MudTd>
        <MudTd DataLabel="Username">@context.UserName</MudTd>
        <MudTd DataLabel="Email">@context.Email</MudTd>
        <MudTd DataLabel="Role">@string.Join(",", context.Roles)</MudTd>
        <MudTd DataLabel="Block">@context.IsBlocked</MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager PageSizeOptions="new int[] { 10, 25, 50, 100 }" />
    </PagerContent>
</MudTable>

@code {
    private HashSet<ApplicationUserDto> selectedUsers;
    private IEnumerable<ApplicationUserDto> users;
    private string searchString;

    protected override async Task OnInitializedAsync()
    {
        users = await UserManagerService.GetAllUsers();
    }

    private Func<ApplicationUserDto, bool> UserFilter => x =>
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;

        if ($"{x.Id}".Contains(searchString))
            return true;

        if (x.UserName.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;

        if (x.Email.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;

        return false;
    };
}
